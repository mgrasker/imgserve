apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: bft-trial-
  namespace: imgserve
spec:
  entrypoint: run-trial-batch
  volumeClaimTemplates:                 
  - metadata:
      name: workdir-0 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-1
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-2 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-3 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-4 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-5 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-6
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-7 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-8 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-9 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  - metadata:
      name: workdir-10
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi                  
  templates:
  - name: run-trial-batch
    steps:
    - - name: parallel-trials
        template: run-trial-slice
        arguments:
          parameters:
          - name: batch_slice
            value: "{{item.batch_slice}}"
          - name: count
            value: "{{item.count}}"
        withItems:
        - { count: "0", batch_slice: "0 of 10" }
        - { count: "1", batch_slice: "1 of 10" }
        - { count: "2", batch_slice: "2 of 10" }
        - { count: "3", batch_slice: "3 of 10" }
        - { count: "4", batch_slice: "4 of 10" }
        - { count: "5", batch_slice: "5 of 10" }
        - { count: "6", batch_slice: "6 of 10" }
          #- { count: "7", batch_slice: "7 of 10" }
          #- { count: "8", batch_slice: "8 of 10" }
          #- { count: "9", batch_slice: "9 of 10" }
          #- { count: "10", batch_slice: "10 of 10" }

  - name: run-trial-slice
    inputs:
        parameters:
        - name: batch_slice
        - name: count
    securityContext:
      fsGroup: 1000
    retryStrategy:
      limit: 10 
      retryPolicy: "Always"
      backoff:
        duration: "1"      # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"
        factor: 2
        maxDuration: "5m"
    container:
        image: mgraskertheband/imgserve-experiment:1.2.0
        imagePullPolicy: Always
        volumeMounts:                     # same syntax as k8s Pod spec
        - name: "workdir-{{inputs.parameters.count}}"
          mountPath: /mnt/imgserve
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2512Mi
            cpu: 300m
        args:
        - --experiment-name
        - "bft-2020"
        - --run-trial
        - --no-compress
        - --extract-faces
        - --cv2-cascade-min-neighbors
        - "5"
        - --no-prompt
        - --no-local-data
        - --remote-url
        - "https://comp-syn.ialcloud.xyz"
        - --skip-already-searched
        - --batch-slice
        - "{{inputs.parameters.batch_slice}}"
        - --trial-hostname
        - "kube-fe-bft"
        - --trial-ids
        - "bft-2020-fe-{{inputs.parameters.count}}"
        env:
        - name: ES_CLIENT_FQDN
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: es_client_fqdn
        - name: ES_CLIENT_PORT
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: es_client_port
        - name: ES_USERNAME
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: es_username
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: es_password
        - name: AWS_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: aws_bucket_name
        - name: AWS_REGION_NAME
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: aws_region_name
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: aws_secret_access_key
        - name: IMGSERVE_USER_COMPSYN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: imgserve_user_compsyn_password
        - name: IMGSERVE_USER_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: imgserve_user_admin_password
        - name: IMGSERVE_REMOTE_USERNAME
          value: compsyn
        - name: IMGSERVE_REMOTE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: imgserve-web
              key: imgserve_user_compsyn_password
        - name: IMGSERVE_LOCAL_DATA_STORE
          value: /mnt/imgserve
        - name: IMGSERVE_LOG_LEVEL
          value: "20"
        - name: DOCKER_HOST               
          value: 127.0.0.1
    sidecars:
    - name: dind
      image: docker:18.09.4-dind
      resources:
        requests:
          memory: 200Mi
          cpu: 100m
      securityContext:
        privileged: true                
      mirrorVolumeMounts: true
